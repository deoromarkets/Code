<UserControl x:Class="deORO.Views.NewUserView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:p="clr-namespace:deORO.Helpers"
             xmlns:conv="clr-namespace:deORO.Converters"
             xmlns:views="clr-namespace:deORO.Views"
             xmlns:extensions="http://wpflocalizeextension.codeplex.com"
             xmlns:lex ="clr-namespace:WPFLocalizeExtension.Engine;assembly=WPFLocalizeExtension"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             lex:LocalizeDictionary.DesignCulture="fr"
             lex:LocalizeDictionary.OutputMissingKeys="True"
             extensions:ResxLocalizationProvider.DefaultAssembly="deORO"
             extensions:ResxLocalizationProvider.DefaultDictionary="Strings"
             mc:Ignorable="d" Loaded="UserControl_Loaded" Unloaded="UserControl_Unloaded">
    <UserControl.Resources>
        <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"></conv:BoolToVisibilityConverter>
        <Style x:Key="styleCalendar" TargetType="{x:Type Calendar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <!-- Wrapping in ViewBox will enlarge calendar of that size.-->
                        <Viewbox Height="300"
                         Width="300">
                            <CalendarItem x:Name="PART_CalendarItem"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"/>
                        </Viewbox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Border x:Name="NewUser" BorderBrush="Navy" BorderThickness="1" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="60,25,60,35">

        <Border.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Color="#f6f7f2" Offset="0" />
                    <GradientStop Color="#f6f7f2" Offset="0.2" />
                    <GradientStop Color="#ddded8" Offset="0.5" />
                    <GradientStop Color="#f6f7f2" Offset="0.9" />
                    <GradientStop Color="#f6f7f2" Offset="1" />
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
        </Border.Background>
        <Border.Effect>
            <DropShadowEffect />
        </Border.Effect>
        <Grid Name="Grid">
            <Grid.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type PasswordBox}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="60"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition Height="80"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*"></ColumnDefinition>
                <ColumnDefinition Width="0.5*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" BorderBrush="#49a5bf" BorderThickness="0,0,0,2">
                <TextBlock  VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="15" 
                   FontWeight="Bold" Foreground="#e73827" Text="{extensions:Loc NewUser.Title}"></TextBlock>
            </Border>

            <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource DefaultTextBlock}" Text="{extensions:Loc NewUser.FirstName}"></TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="0" Style="{StaticResource DefaultTextBlock}" Text="{extensions:Loc NewUser.LastName}"></TextBlock>
            <TextBlock Grid.Row="3" Grid.Column="0" Style="{StaticResource DefaultTextBlock}" Text="{extensions:Loc NewUser.Email}"></TextBlock>
            <TextBlock Grid.Row="4" Grid.Column="0" Style="{StaticResource DefaultTextBlock}" Text="{extensions:Loc NewUser.DOB}"
                Visibility="{Binding Path=DataContext.DOBAndGenderRequiredVisible,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}},
                                   Converter={StaticResource BoolToVisibilityConverter}}">
            </TextBlock>
            <TextBlock Grid.Row="5" Grid.Column="0" Style="{StaticResource DefaultTextBlock}" Text="{extensions:Loc NewUser.Gender}"
                                       Visibility="{Binding Path=DataContext.DOBAndGenderRequiredVisible,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}},
                                   Converter={StaticResource BoolToVisibilityConverter}}"></TextBlock>
            <TextBlock Grid.Row="6" Grid.Column="0" Style="{StaticResource DefaultTextBlock}" Text="{extensions:Loc NewUser.UserName}"></TextBlock>
            <TextBlock Grid.Row="7" Grid.Column="0" Style="{StaticResource DefaultTextBlock}" Text="{extensions:Loc NewUser.Password}"></TextBlock>
            <TextBlock Grid.Row="8" Grid.Column="0" Style="{StaticResource DefaultTextBlock}" Text="{extensions:Loc NewUser.ConfirmPassword}"></TextBlock>
            <TextBlock Grid.Row="9" Grid.Column="0" Style="{StaticResource DefaultTextBlock}" 
                       Visibility="{Binding Path=DataContext.BarcodeVisible,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}},
                                   Converter={StaticResource BoolToVisibilityConverter}}" Text="{extensions:Loc NewUser.ClickBarcodeAndScan}"></TextBlock>

            <TextBox Grid.Row="1" Grid.Column="1" Name="TextFistName" Text="{Binding Path=FirstName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}" Style="{StaticResource DefaultTextBox}"/>

            <TextBox Grid.Row="2" Grid.Column="1" Name="TextLastName" Text="{Binding Path=LastName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}" Style="{StaticResource DefaultTextBox}"/>

            <TextBox Grid.Row="3" Grid.Column="1" Name="TextEmail" Text="{Binding Path=Email,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}" Style="{StaticResource DefaultTextBox}"/>

            <Grid Grid.Row="4" Grid.Column="1" Name="TextDOB" Visibility="{Binding Path=DataContext.DOBAndGenderRequiredVisible,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}},
                                   Converter={StaticResource BoolToVisibilityConverter}}">
                <StackPanel VerticalAlignment="Center">                  
                    <Grid Margin="10,0"   >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.1*"></ColumnDefinition>
                            <ColumnDefinition Width="0.9*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <DatePicker Grid.Column="0" Width="29" Name="MyCalendar" Text="{Binding Path=DOB,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}"    CalendarClosed="DatePicker_CalendarClosed" CalendarOpened="DatePicker_CalendarOpened"  VerticalAlignment="Center"   >
                            <DatePicker.Resources>
                            </DatePicker.Resources>
                            <DatePicker.CalendarStyle>
                                <StaticResource ResourceKey="styleCalendar"/>
                            </DatePicker.CalendarStyle>
                        </DatePicker>
                        <TextBlock  x:Name="DOB_Textblock" Grid.Column="1" HorizontalAlignment="Center"  Text="{extensions:Loc NewUser.DOBTexblock}"></TextBlock>
                    </Grid>
                  
                </StackPanel>
            </Grid>

            


            <ListBox Background="Transparent" BorderBrush="Transparent" SelectionMode="Single" Grid.Row="5" Grid.Column="1" Name="TextGender" VerticalAlignment="Center" Margin="0,0,10,0"
                                     Visibility="{Binding Path=DataContext.DOBAndGenderRequiredVisible,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}},
                                   Converter={StaticResource BoolToVisibilityConverter}}">
                <ListBoxItem Width="193">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <Grid Margin="0,0,-170,0" VerticalAlignment="Center" Width="204" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19*"/>
                                <ColumnDefinition Width="66*"/>
                            </Grid.ColumnDefinitions>
                            <RadioButton x:Name="RadioButtonMaleGender"  Grid.Column="0" HorizontalAlignment="Left" FontSize="18" Content="{extensions:Loc Gender.Male}"   Grid.ColumnSpan="2" Checked="RadioButtonsGender_Checked" />
                            <RadioButton x:Name="RadioButtonFemaleGender" Grid.Column="1" HorizontalAlignment="Right" FontSize="18" Content="{extensions:Loc Gender.Female}" Checked="RadioButtonsGender_Checked" />
                           
                        </Grid>
                    </StackPanel>
                </ListBoxItem>
            </ListBox>
            <TextBox Grid.Row="6" Grid.Column="1" Name="TextUserName" Text="{Binding Path=UserName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}" Style="{StaticResource DefaultTextBox}"/>

            <PasswordBox Grid.Row="7" Grid.Column="1" p:PasswordBoxAssistant.BindPassword="True" Name="PasswordBoxPassword"
                     p:PasswordBoxAssistant.BoundPassword="{Binding Path=Password,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}" 
                     Style="{StaticResource DefaultPasswordBox}"></PasswordBox>
            <PasswordBox Grid.Row="8" Grid.Column="1" p:PasswordBoxAssistant.BindPassword="True" Name="PasswordBoxConfirmPassword"
                     p:PasswordBoxAssistant.BoundPassword="{Binding Path=ConfirmPassword,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}" 
                     Style="{StaticResource DefaultPasswordBox}"></PasswordBox>

            <TextBox Grid.Row="9" Grid.Column="1" Name="TextBarcode" Width="170" IsReadOnly = "True"
                     Visibility="{Binding Path=DataContext.BarcodeVisible,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}, 
                                   Converter={StaticResource BoolToVisibilityConverter}}"
                     Text="{Binding Path=Barcode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}" Style="{StaticResource DefaultTextBox}"/>
            <RadioButton Name="RadioButtonBarcode" Style="{StaticResource {x:Type ToggleButton}}"  
                         Visibility="{Binding Path=DataContext.BarcodeVisible,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}},
                                   Converter={StaticResource BoolToVisibilityConverter}}"             
                         Grid.Row="9" Grid.Column="1"  Width="75" 
                         Command="{Binding DataContext.BarcodeCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}" 
                         Height="60" Margin="175,0,0,0">
                <Image Source="/Images/Barcode.png" Stretch="Fill"></Image>
            </RadioButton>

            <Button Grid.Row="11" Grid.Column="0" Height="Auto" Margin="5" Command="{Binding DataContext.CancelCommand,
                                        RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}" Style="{StaticResource RedButton}" Content="{extensions:Loc NewUser.Cancel}"></Button>
            <Button Grid.Row="11" Grid.Column="1" Height="Auto" Margin="5" Command="{Binding DataContext.RegisterNewUserCommand,
                                        RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}"  Content="{extensions:Loc NewUser.Register}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="5"></Setter>
                        <Setter Property="Height" Value="50"></Setter>
                        <Setter Property="Width" Value="Auto"></Setter>
                        <Setter Property="Foreground" Value="White"></Setter>
                        <Setter Property="Background" Value="Green"></Setter>
                        <Setter Property="FontSize" Value="15"></Setter>
                        <Setter Property="FontWeight" Value="ExtraBold"></Setter>
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <MultiDataTrigger >
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=TextEmail, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=TextUserName, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=MyCalendar, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=PasswordBoxPassword, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=PasswordBoxConfirmPassword, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=RadioButtonMaleGender,Path=IsChecked}" Value="true" />

                                </MultiDataTrigger.Conditions>

                                <Setter Property="IsEnabled" Value="true" />
                            </MultiDataTrigger>
                            <MultiDataTrigger >
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=TextEmail, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=TextUserName, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=MyCalendar, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=PasswordBoxPassword, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=PasswordBoxConfirmPassword, Path=(Validation.HasError)}" Value="false" />                                 
                                    <Condition Binding="{Binding ElementName=RadioButtonFemaleGender,Path=IsChecked}" Value="true" />
                                </MultiDataTrigger.Conditions>

                                <Setter Property="IsEnabled" Value="true" />
                            </MultiDataTrigger>



                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </Border>
</UserControl>
