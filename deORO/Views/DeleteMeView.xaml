<UserControl x:Class="deORO.Views.DeleteMeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d"
             xmlns:extensions="http://wpflocalizeextension.codeplex.com"
             xmlns:lex ="clr-namespace:WPFLocalizeExtension.Engine;assembly=WPFLocalizeExtension"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             lex:LocalizeDictionary.DesignCulture="fr"
             lex:LocalizeDictionary.OutputMissingKeys="True"
             extensions:ResxLocalizationProvider.DefaultAssembly="deORO"
             extensions:ResxLocalizationProvider.DefaultDictionary="Strings"
             xmlns:validator="clr-namespace:deORO.Helpers"
             d:DesignHeight="300" d:DesignWidth="300" Loaded="UserControl_Loaded" Unloaded="UserControl_Unloaded">
    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type TextBox}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="80"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.2*"></ColumnDefinition>
            <ColumnDefinition Width="0.8*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <lex:GapTextControl FormatString="{extensions:Loc DeleteMe.Title}" Grid.Row="0" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center">
            <lex:GapTextControl.Template>
                <ControlTemplate>
                    <TextBlock x:Name="PART_TextBlock" Style="{StaticResource ErrorTextBlock}" TextWrapping="Wrap" />
                </ControlTemplate>
            </lex:GapTextControl.Template>
            <lex:GapTextControl.Gaps>
                <Run Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=lex:GapTextControl}, Path=DataContext.AccountBalance}" />
            </lex:GapTextControl.Gaps>
        </lex:GapTextControl>

        <TextBlock Grid.Row="1" Grid.Column="0"  Style="{StaticResource DefaultTextBlock}" Text="{extensions:Loc DeleteMe.Email}"></TextBlock>
        <TextBox Grid.Row="1" Grid.Column="1" Name="TextBoxEmail" Style="{StaticResource LongTextBox}" Text="{Binding Email}" IsReadOnly="True">
        </TextBox>

        <TextBlock Grid.Row="2" Grid.Column="0"  Style="{StaticResource DefaultTextBlock}" Text="{extensions:Loc DeleteMe.FirstLastName}"></TextBlock>
        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal">
            <TextBox Name="TextBoxFirstName" Style="{StaticResource DefaultTextBox}">
                <TextBox.Text>
                    <Binding Path="FirstName" UpdateSourceTrigger="PropertyChanged" >
                        <Binding.ValidationRules>
                            <validator:EmptyValidationRule ValidatesOnTargetUpdated="True" Message="{extensions:Loc DeleteMe.ErrorFirstName}"></validator:EmptyValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox Name="TextBoxLastName" Style="{StaticResource DefaultTextBox}">
                <TextBox.Text>
                    <Binding Path="LastName" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validator:EmptyValidationRule ValidatesOnTargetUpdated="True" Message="{extensions:Loc DeleteMe.ErrorLastName}"></validator:EmptyValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </StackPanel>
        <TextBlock Grid.Row="3" Grid.Column="0"  Style="{StaticResource DefaultTextBlock}" Text="{extensions:Loc DeleteMe.Address}"></TextBlock>
        <TextBox Grid.Row="3" Grid.Column="1" Name="TextBoxAddress" Style="{StaticResource LongTextBox}">
            <TextBox.Text>
                <Binding Path="Address" UpdateSourceTrigger="PropertyChanged" >
                    <Binding.ValidationRules>
                        <validator:EmptyValidationRule ValidatesOnTargetUpdated="True" Message="{extensions:Loc DeleteMe.ErrroAddress}"></validator:EmptyValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBlock Grid.Row="4" Grid.Column="0"  Style="{StaticResource DefaultTextBlock}" Text="{extensions:Loc DeleteMe.CityStateZip}"></TextBlock>
        <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal">
            <TextBox Name="TextBoxCity" Style="{StaticResource DefaultTextBox}">
                <TextBox.Text>
                    <Binding Path="City" UpdateSourceTrigger="PropertyChanged" >
                        <Binding.ValidationRules>
                            <validator:EmptyValidationRule ValidatesOnTargetUpdated="True" Message="{extensions:Loc DeleteMe.ErrorCity}"></validator:EmptyValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox Name="TextBoxState" Style="{StaticResource MediumTextBox}">
                <TextBox.Text>
                    <Binding Path="State" UpdateSourceTrigger="PropertyChanged" >
                        <Binding.ValidationRules>
                            <validator:EmptyValidationRule ValidatesOnTargetUpdated="True" Message="{extensions:Loc DeleteMe.ErrorState}"></validator:EmptyValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox Name="TextBoxZip" Style="{StaticResource MediumTextBox}">
                <TextBox.Text>
                    <Binding Path="Zip" UpdateSourceTrigger="PropertyChanged" >
                        <Binding.ValidationRules>
                            <validator:ZipValidationRule ValidatesOnTargetUpdated="True" Message="{extensions:Loc DeleteMe.ErrorZip}"></validator:ZipValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </StackPanel>
        <TextBlock Grid.Row="5" Grid.Column="0"  Style="{StaticResource DefaultTextBlock}" Text="{extensions:Loc DeleteMe.Phone}"></TextBlock>
        <TextBox Grid.Row="5" Grid.Column="1" Name="TextBoxPhone" Style="{StaticResource LongTextBox}">
            <TextBox.Text>
                <Binding Path="Phone" UpdateSourceTrigger="PropertyChanged" >
                    <Binding.ValidationRules>
                        <validator:PhoneValidationRule ValidatesOnTargetUpdated="True" Message="{extensions:Loc DeleteMe.ErrorPhone}"></validator:PhoneValidationRule>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Button Grid.Row="6" Grid.Column="0" Content="Delete" Command="{Binding DeleteCommand}" Grid.ColumnSpan="2">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="IsEnabled" Value="false" />
                    <Setter Property="Margin" Value="5"></Setter>
                    <Setter Property="Height" Value="Auto"></Setter>
                    <Setter Property="Width" Value="Auto"></Setter>
                    <Setter Property="Foreground" Value="White"></Setter>
                    <Setter Property="Background" Value="Green"></Setter>
                    <Setter Property="FontSize" Value="15"></Setter>
                    <Setter Property="FontWeight" Value="ExtraBold"></Setter>
                    <Setter Property="Padding" Value="10"></Setter>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=TextBoxFirstName, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding ElementName=TextBoxLastName, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding ElementName=TextBoxAddress, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding ElementName=TextBoxCity, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding ElementName=TextBoxState, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding ElementName=TextBoxZip, Path=(Validation.HasError)}" Value="false" />
                                <Condition Binding="{Binding ElementName=TextBoxPhone, Path=(Validation.HasError)}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="true" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>
