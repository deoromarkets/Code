<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Color x:Key="BlackColor">#FF000000</Color>
    <Color x:Key="WhiteColor">#FFFFFFFF</Color>
    <Color x:Key="ScrollBarButtonBorderColor">#FFB6BABF</Color>
    <SolidColorBrush x:Key="WhiteBrush" Color="{DynamicResource WhiteColor}" />
    <LinearGradientBrush x:Key="NormalBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFF8F8F9" Offset="1" />
        <GradientStop Color="#FFF8F8F9" Offset="0.332" />
        <GradientStop Color="#FFF1F2F4" Offset="0.341" />
        <GradientStop Color="#FFF1F2F4" Offset="0.349" />
        <GradientStop Color="#FFE8EAEC" Offset="0.358" />
        <GradientStop Color="#FFF3F4F5" Offset="0.75" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF828790" />
    <SolidColorBrush x:Key="MouseOverBorderBrush" Color="#FFCBAB52" />
    <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFFFFDE1" Offset="0" />
        <GradientStop Color="#FFFFE7A0" Offset="1" />
        <GradientStop Color="#FFFFE8A5" Offset="0.332" />
        <GradientStop Color="#FFFFE18B" Offset="0.341" />
        <GradientStop Color="#FFFFE18B" Offset="0.349" />
        <GradientStop Color="#FFFFD768" Offset="0.358" />
        <GradientStop Color="#FFFFE394" Offset="0.75" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFFFBC67" Offset="0" />
        <GradientStop Color="#FFFFD6A3" Offset="1" />
        <GradientStop Color="#FFFFAB41" Offset="0.332" />
        <GradientStop Color="#FFFD9E3F" Offset="0.341" />
        <GradientStop Color="#FFFD9E3F" Offset="0.349" />
        <GradientStop Color="#FFFB9143" Offset="0.358" />
        <GradientStop Color="#FFFECB95" Offset="0.75" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PressedBorderBrush" Color="#FFB29648" />
    <LinearGradientBrush x:Key="LightBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF" Offset="0.0" />
        <GradientStop Color="#EEE" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />
    <LinearGradientBrush x:Key="ListItemHoverBrush" EndPoint="0.5,0.907" StartPoint="0.5,0.103">
        <GradientStop Color="#FFFDEEB3" Offset="0" />
        <GradientStop Color="#FFFDFAE0" Offset="1" />
        <GradientStop Color="#FFFDE38A" Offset="0.306" />
        <GradientStop Color="#FFFDEAA1" Offset="0.707" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="FocusedBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFE6E8EB" Offset="0" />
        <GradientStop Color="#FFDCDFE3" Offset="1" />
        <GradientStop Color="#FFDDE0E3" Offset="0.332" />
        <GradientStop Color="#FFD4D7DB" Offset="0.341" />
        <GradientStop Color="#FFD4D7DB" Offset="0.349" />
        <GradientStop Color="#FFC7CBD1" Offset="0.358" />
        <GradientStop Color="#FFD7DBDE" Offset="0.75" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="SelectedListItemBorderBrush" EndPoint="0.5,0.932" StartPoint="0.5,0.083">
        <GradientStop Color="#FFC2762B" Offset="0" />
        <GradientStop Color="#FFC29E47" Offset="1" />
        <GradientStop Color="#FFC28838" Offset="0.478" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedBackgroundBrush" EndPoint="0.5,0.902" StartPoint="0.5,0.134">
        <GradientStop Color="#FFFFE575" Offset="0" />
        <GradientStop Color="#FFFEE287" Offset="1" />
        <GradientStop Color="#FFFFE48A" Offset="0.086" />
        <GradientStop Color="#FFFFE48A" Offset="0.435" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ListItemSelectedInsiderBorderBrush" Color="#FFF8D172" />
    <LinearGradientBrush x:Key="ScrollBarButtonBrush" EndPoint="0.971,0.51" StartPoint="0.016,0.51">
        <GradientStop Color="#FFF2F3F3" Offset="0" />
        <GradientStop Color="#FFF1F1F1" Offset="0.668" />
        <GradientStop Color="#FFE6E7E8" Offset="1" />
        <GradientStop Color="#FFE7E8E9" Offset="0.677" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBarButtonBorderBrush" Color="{DynamicResource ScrollBarButtonBorderColor}" />
    <LinearGradientBrush x:Key="ScrollBarButtonHoverBrush" EndPoint="0.971,0.51" StartPoint="0.016,0.51">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFFBFBFB" Offset="0.668" />
        <GradientStop Color="#FFF8F8F9" Offset="1" />
        <GradientStop Color="#FFF5F6F7" Offset="0.677" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBarPressedBrush" Color="#FFE1E2E3" />
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="#FFD4D6D9" />
    <SolidColorBrush x:Key="TextBoxBorderHoverBrush" Color="#FFBBBFC4" />
    <LinearGradientBrush x:Key="ComboBoxToggleBg" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFFEFEFE" Offset="0" />
        <GradientStop Color="#FFF4F6F7" Offset="1" />
        <GradientStop Color="#FFF8F8FA" Offset="0.75" />
        <GradientStop Color="#FFFBFBFC" Offset="0.194" />
        <GradientStop Color="#FFFBFBFB" Offset="0.478" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
    <LinearGradientBrush x:Key="WindowBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE4E4E5" Offset="0" />
        <GradientStop Color="#FFEBEEF1" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DefaultedBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#777" Offset="0.0" />
        <GradientStop Color="#000" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />
    <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />
    <SolidColorBrush x:Key="TextBrush" Color="{DynamicResource BlackColor}" />
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <Style x:Key="DropShadowGrid" TargetType="{x:Type Grid}">
        <Setter Property="UIElement.Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background" Value="{StaticResource WhiteBrush}" />
    </Style>
    <Style x:Key="DropShadowBorder" TargetType="{x:Type Border}">
        <Setter Property="UIElement.Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Border.Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Border.BorderBrush" Value="#FFDADADA" />
    </Style>
    <Style x:Key="NuclearButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Control.Template" Value="{DynamicResource NuclearButton}" />
        <Setter Property="Control.Background" Value="{DynamicResource NormalBrushExtSimple}" />
        <Setter Property="Control.BorderBrush" Value="#FFBBBFC4" />
    </Style>
    <ControlTemplate x:Key="NuclearButton" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid Name="Grid">
            <Border Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" CornerRadius="3">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFF7FAFC" Offset="0" />
                        <GradientStop Color="#FFE7EAEE" Offset="1" />
                        <GradientStop Color="#FFF5F7FA" Offset="0.332" />
                        <GradientStop Color="#FFECEFF2" Offset="0.741" />
                        <GradientStop Color="#FFE8EBEF" Offset="0.875" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                    </Border.BorderBrush>
                </Border>
            </Border>
            <Border Name="PressedBorder" BorderThickness="1" CornerRadius="3" Opacity="0" BorderBrush="{DynamicResource PressedBorderBrush3}">
                <Border BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource PressedBorderBrushInner3}" Background="{DynamicResource PressedBrush3}" />
            </Border>
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefault" Value="True">
                <Setter TargetName="Border" Value="{DynamicResource MouseOverBorderBrush}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True" />
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="True" />
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" Property="Border.Background" />
                <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" Property="Border.BorderBrush" />
                <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Control.Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource SolidBorderBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <Border Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" />
                        <ScrollViewer Margin="1" Focusable="False" Background="{TemplateBinding Control.Background}">
                            <StackPanel Margin="2" IsItemsHost="True" />
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" Property="Border.Background" />
                            <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" Property="Border.BorderBrush" />
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid SnapsToDevicePixels="True" Margin="0,1">
                        <Border Name="SelectedBorder" Opacity="0" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource SelectedListItemBorderBrush}">
                            <Border BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ListItemSelectedBackgroundBrush}" />
                        </Border>
                        <Border Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="10,4,0,4" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="HoverBorder" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="ListBoxItem.IsSelected" Value="True">
                            <Setter Value="{DynamicResource SelectedBackgroundBrush}" TargetName="HoverBorder" Property="Border.Background" />
                            <Setter TargetName="SelectedBorder" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NuclearScrollRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
        <Setter Property="Control.IsTabStop" Value="False" />
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="{TemplateBinding Control.BorderThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NuclearRepeatButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Control.Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border Name="Border" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="1" Background="{DynamicResource ScrollBarButtonBrush}" />
                        <Border Name="HoverBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="1" Background="{DynamicResource ScrollBarButtonHoverBrush}" Opacity="0" />
                        <Border Name="PressedBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="1" Background="{DynamicResource ScrollBarPressedBrush}" Opacity="0" />
                        <ContentPresenter Name="ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsKeyboardFocused" Value="True" />
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="HoverBorder" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Value="{DynamicResource PressedBrush}" TargetName="Border" Property="Border.Background" />
                            <Setter Value="{DynamicResource PressedBorderBrush}" TargetName="Border" Property="Border.BorderBrush" />
                            <Setter TargetName="PressedBorder" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" Property="Border.Background" />
                            <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" Property="Border.BorderBrush" />
                            <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NuclearThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Name="Grid" Margin="0,0,0,0">
                        <Border BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" Background="{DynamicResource ScrollBarButtonBrush}" CornerRadius="1" />
                        <Border Name="HoverBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ScrollBarButtonHoverBrush}" Opacity="0" />
                        <Border Name="PressedBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ScrollBarPressedBrush}" Opacity="0" />
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585L12.244898,6.462585" Height="1" />
                            <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585L12.244898,6.462585" Height="1" />
                            <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585L12.244898,6.462585" Height="1" />
                            <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585L12.244898,6.462585" Height="1" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsFocused" Value="True" />
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="HoverBorder" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False" />
                        <Trigger Property="Thumb.IsDragging" Value="True">
                            <Setter TargetName="PressedBorder" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="18" />
                        </Grid.RowDefinitions>
                        <Border Grid.ColumnSpan="11" Grid.RowSpan="3" CornerRadius="1" BorderBrush="{x:Null}">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1.016,0.5" StartPoint="0.017,0.5">
                                    <GradientStop Color="#FFEBEDEF" Offset="0" />
                                    <GradientStop Color="#FFD8DADC" Offset="1" />
                                    <GradientStop Color="#FFF4F4F4" Offset="0.047" />
                                    <GradientStop Color="WhiteSmoke" Offset="0.086" />
                                    <GradientStop Color="#FFFCFCFC" Offset="0.802" />
                                    <GradientStop Color="#FFEBEDEF" Offset="0.897" />
                                    <GradientStop Color="#FFF1F3F5" Offset="0.931" />
                                    <GradientStop Color="#FFE8EAEC" Offset="0.966" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <RepeatButton Name="DecreaseRepeat" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineUpCommand">
                            <Grid>
                                <Path Name="DecreaseArrow" StrokeThickness="1" Data="M0,4L8,4 4,0z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource BlackColor}" />
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </RepeatButton>
                        <Track Name="PART_Track" Grid.Row="1" Orientation="Vertical" IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource NuclearThumbStyle}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Name="PageUp" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Name="PageDown" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                        <RepeatButton Name="IncreaseRepeat" Grid.Row="2" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineDownCommand">
                            <Grid>
                                <Path Name="IncreaseArrow" StrokeThickness="1" Data="M0,0L4,4 8,0z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource BlackColor}" />
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Track.Orientation" Value="Vertical" />
                            <Setter TargetName="DecreaseRepeat" Property="ButtonBase.Command" Value="ScrollBar.LineLeftCommand" />
                            <Setter TargetName="IncreaseRepeat" Property="ButtonBase.Command" Value="ScrollBar.LineRightCommand" />
                            <Setter TargetName="PageDown" Property="ButtonBase.Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="ButtonBase.Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Control.Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Control.Padding}" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
                        <ScrollBar Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" Orientation="Vertical" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="NormalBorderBrushExtSimple" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD6D8D9" Offset="0" />
        <GradientStop Color="#FFA1A2A4" Offset="1" />
        <GradientStop Color="#FFCCCDCE" Offset="0.733" />
        <GradientStop Color="#FFD7D8D9" Offset="0.254" />
    </LinearGradientBrush>
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Rectangle Name="Rectangle" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Stroke="{DynamicResource NormalBorderBrushExtSimple}" Fill="{DynamicResource ComboBoxToggleBg}" />
            <Rectangle Name="Rectangle_Copy" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Margin="1" Fill="{x:Null}">
                <Rectangle.Stroke>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                </Rectangle.Stroke>
            </Rectangle>
            <Path Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M0,0L4,4 8,0z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="Rectangle" Value="{DynamicResource ListItemHoverBrush}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Rectangle" Value="{DynamicResource SelectedListItemBorderBrush}" Property="Shape.Stroke" />
                <Setter TargetName="Rectangle" Value="{DynamicResource ListItemSelectedBackgroundBrush}" Property="Shape.Fill" />
                <Setter TargetName="Rectangle_Copy" Value="{DynamicResource ListItemSelectedInsiderBorderBrush}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Rectangle" Property="Shape.Fill" />
                <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="Rectangle" Property="Shape.Stroke" />
                <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
                <Setter Value="{DynamicResource DisabledForegroundBrush}" TargetName="Arrow" Property="Shape.Fill" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Grid>
            <Border Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Control.Background}" Margin="0,2,0,0" />
            <Border Name="border" BorderBrush="{DynamicResource TextBoxBorderHoverBrush}" BorderThickness="1" Opacity="0" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="border" Property="UIElement.Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.Height" Value="19.8" />
        <Setter Property="Control.Template" Value="{DynamicResource NuclearComboBox}" />
    </Style>
    <LinearGradientBrush x:Key="PressedBorderBrush3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC2762B" Offset="0" />
        <GradientStop Color="#FFC29E47" Offset="1" />
        <GradientStop Color="#FFC28031" Offset="0.315" />
        <GradientStop Color="#FFC29440" Offset="0.728" />
        <GradientStop Color="#FFC29A44" Offset="0.853" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBrush3" EndPoint="0.5,1.021" StartPoint="0.5,0.031">
        <GradientStop Color="#FFFBD678" Offset="0" />
        <GradientStop Color="#FFFEE287" Offset="1" />
        <GradientStop Color="#FFFEE287" Offset="0.138" />
        <GradientStop Color="#FFFFE48A" Offset="0.241" />
        <GradientStop Color="#FFFFE48A" Offset="0.879" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBorderBrushInner3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF6C867" Offset="0" />
        <GradientStop Color="#FFFAD77A" Offset="1" />
        <GradientStop Color="#FFF8D172" Offset="0.323" />
        <GradientStop Color="#FFF8D172" Offset="0.716" />
        <GradientStop Color="#FFF6CC6C" Offset="0.866" />
    </LinearGradientBrush>
    <ControlTemplate x:Key="EditableTextComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="16" />
            </Grid.ColumnDefinitions>
            <Rectangle Name="Rectangle" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource TextBoxBorderBrush}">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle Name="HoverRectangle" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource TextBoxBorderHoverBrush}" Opacity="0" Fill="{x:Null}" />
            <Rectangle Name="ButtonHover" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource MouseOverBorderBrush}" Fill="{DynamicResource ComboBoxToggleBg}" Grid.Column="1" Opacity="0" />
            <Rectangle Name="ButtonHoverInner" Grid.ColumnSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="{DynamicResource ListItemHoverBrush}" Grid.Column="1" Margin="2" Opacity="0" Stroke="{x:Null}" />
            <Rectangle Name="ButtonPressed" Grid.ColumnSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrush3}" Fill="{DynamicResource ComboBoxToggleBg}" Opacity="0" Grid.Column="1" />
            <Rectangle Name="ButtonPressednner" Grid.ColumnSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrushInner3}" Fill="{DynamicResource PressedBrush3}" Grid.Column="1" Opacity="0" Margin="1" />
            <Path Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M0,0L4,4 8,0z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="HoverRectangle" Property="UIElement.Opacity" Value="1" />
                <Setter TargetName="ButtonHover" Property="UIElement.Opacity" Value="1" />
                <Setter TargetName="ButtonHoverInner" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="ButtonPressed" Property="UIElement.Opacity" Value="1" />
                <Setter TargetName="ButtonPressednner" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Rectangle" Property="Shape.Fill" />
                <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="Rectangle" Property="Shape.Stroke" />
                <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
                <Setter Value="{DynamicResource DisabledForegroundBrush}" TargetName="Arrow" Property="Shape.Fill" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="NuclearComboBox" TargetType="{x:Type ComboBox}">
        <Grid>
            <ToggleButton Name="ToggleButton" Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" Focusable="False" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter Name="ContentSite" HorizontalAlignment="Left" Margin="10,2,20,2" VerticalAlignment="Center" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" IsHitTestVisible="False" />
            <TextBox Name="PART_EditableTextBox" Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Stretch" Margin="0,0,16,0" VerticalAlignment="Stretch" Focusable="True" Background="#00FFFFFF" IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}" Style="{x:Null}" />
            <Popup Name="Popup" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Placement="Bottom" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                <Grid Name="DropDown" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" SnapsToDevicePixels="True">
                    <Border Name="DropDownBorder" Background="{DynamicResource WhiteBrush}" BorderBrush="{DynamicResource NormalBorderBrushExtSimple}" BorderThickness="1" CornerRadius="2" />
                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                    </ScrollViewer>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.HasItems" Value="False">
                <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="DropDownBorder" Property="FrameworkElement.Margin" Value="0,1,0,0" />
            </Trigger>
            <Trigger Property="ComboBox.IsEditable" Value="True">
                <Setter Property="Control.IsTabStop" Value="False" />
                <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                <Setter TargetName="ToggleButton" Value="{DynamicResource EditableTextComboBoxToggleButton}" Property="Control.Template" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid SnapsToDevicePixels="True" Margin="0,1">
                        <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" />
                        <Border Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="10,4,0,4" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                            <Setter TargetName="HoverBorder" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="TabControlTopBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFE5E9EE" Offset="1" />
        <GradientStop Color="#FFFEFEFE" Offset="0.517" />
        <GradientStop Color="#FFF4F5F6" Offset="0.759" />
        <GradientStop Color="#FFEFF1F3" Offset="0.884" />
        <GradientStop Color="#FFFCFCFC" Offset="0.642" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabControlBottomBrush" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFE5E9EE" Offset="1" />
        <GradientStop Color="#FFFEFEFE" Offset="0.517" />
        <GradientStop Color="#FFF4F5F6" Offset="0.759" />
        <GradientStop Color="#FFEFF1F3" Offset="0.884" />
        <GradientStop Color="#FFFCFCFC" Offset="0.642" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabControlLeftBrush" EndPoint="0.979,0.5" StartPoint="-0.006,0.5">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFE5E9EE" Offset="1" />
        <GradientStop Color="#FFFEFEFE" Offset="0.517" />
        <GradientStop Color="#FFF4F5F6" Offset="0.759" />
        <GradientStop Color="#FFEFF1F3" Offset="0.884" />
        <GradientStop Color="#FFFCFCFC" Offset="0.642" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabControlRightBrush" EndPoint="0.007,0.5" StartPoint="0.992,0.5">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFE5E9EE" Offset="1" />
        <GradientStop Color="#FFFEFEFE" Offset="0.517" />
        <GradientStop Color="#FFF4F5F6" Offset="0.759" />
        <GradientStop Color="#FFEFF1F3" Offset="0.884" />
        <GradientStop Color="#FFFCFCFC" Offset="0.642" />
    </LinearGradientBrush>
    <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Name="RowDefinition0" Height="Auto" />
                            <RowDefinition Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <Border Name="border" CornerRadius="2,2,0,0" Margin="3,0,0,-4" Panel.ZIndex="100" Background="{x:Null}">
                            <TabPanel Name="HeaderPanel" IsItemsHost="True" ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                <TabPanel.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.LayoutTransform>
                                <TabPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.RenderTransform>
                            </TabPanel>
                        </Border>
                        <Border Name="ContentPanel" Grid.Row="1" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
                            <Grid>
                                <ContentPresenter Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
                            <Setter TargetName="border" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Border.CornerRadius" Value="2,2,0,0" />
                            <Setter TargetName="border" Property="Border.CornerRadius" Value="0,0,2,2" />
                            <Setter TargetName="border" Property="FrameworkElement.Margin" Value="3,-3,0,0" />
                            <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}" Property="Border.Background" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                            <Setter TargetName="border" Property="Grid.Column" Value="0" />
                            <Setter TargetName="border" Property="FrameworkElement.Margin" Value="0,0,-3,0" />
                            <Setter TargetName="ContentPanel" Property="FrameworkElement.Margin" Value="0,0,0,0" />
                            <Setter TargetName="border" Property="Border.CornerRadius" Value="0,2,2,0" />
                            <Setter TargetName="ContentPanel" Property="Border.CornerRadius" Value="0,2,2,0" />
                            <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}" Property="Border.Background" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                            <Setter TargetName="border" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Border.CornerRadius" Value="2,0,0,2" />
                            <Setter TargetName="border" Property="Border.CornerRadius" Value="0,2,2,0" />
                            <Setter TargetName="border" Property="FrameworkElement.Margin" Value="-3,0,0,-4" />
                            <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}" Property="Border.Background" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="UIElement.Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.1" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0" Y="0" />
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border Name="SelectedBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Opacity="0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Offset="0" />
                                        <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="1" />
                                        <GradientStop Offset="0.892" />
                                        <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.909" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border Name="Border" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0" />
                                            <GradientStop Offset="1" Color="White" />
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.914" />
                                            <GradientStop Offset="0.927" Color="White" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <Border Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="2,2,0,0">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ContentPresenter Name="ContentSite" HorizontalAlignment="Center" Margin="12,4" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabItem.TabStripPlacement" Value="Left">
                            <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabItem.TabStripPlacement" Value="Right">
                            <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
                            <Setter TargetName="ContentSite" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="HoverBorder" Property="FrameworkElement.Margin" Value="0,0,0,1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HoverBorder" Property="UIElement.Opacity" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="TabItem.IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="SelectedBorder" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="grid" Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="BlueBorderBrush" Color="#FF1F48A1" />
    <Color x:Key="BlueSpreadColor">#FF388BE4</Color>
    <SolidColorBrush x:Key="BlueSpreadBrush" Color="{StaticResource BlueSpreadColor}" />
    <SolidColorBrush x:Key="GreenBorderBrush" Color="#FF186337" />
    <SolidColorBrush x:Key="MagentaBorderBrush" Color="#FF571D70" />
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UIElement.AllowDrop" Value="True" />
        <Setter Property="FrameworkElement.Height" Value="19.8" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Template" Value="{DynamicResource NuclearTextBox}" />
        <Setter Property="Background" Value="Orange" />
    </Style>
    <ControlTemplate x:Key="NuclearTextBox" TargetType="{x:Type TextBox}" >
        <Grid Background="{DynamicResource CheckBoxBg}">
            <Border Name="Border" BorderThickness="1" Padding="2" BorderBrush="{DynamicResource TextBoxBorderBrush}">
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                </Border.Background>
            </Border>
            <Border Name="HoverBorder" BorderThickness="1" Padding="2" Opacity="0" BorderBrush="{DynamicResource TextBoxBorderHoverBrush}" Background="{x:Null}" />
            <Border Name="DisabledBorder" BorderThickness="1" Padding="2" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource TextBoxBorderHoverBrush}" />
            <ScrollViewer Name="PART_ContentHost" Margin="0" />
        </Grid>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                    <Condition Property="UIElement.IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="HoverBorder" Property="UIElement.Opacity" Value="1" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
                <Setter TargetName="HoverBorder" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" Property="Border.BorderBrush" />
                <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
                <Setter TargetName="DisabledBorder" Property="UIElement.Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadioButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="CheckBoxBg" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFF2F3F5" Offset="0" />
        <GradientStop Color="#FFF2F3F5" Offset="1" />
        <GradientStop Color="#FFE8E9EB" Offset="0.197" />
        <GradientStop Color="#FFE8E9EB" Offset="0.522" />
        <GradientStop Color="#FFF0F1F2" Offset="0.723" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckBoxInnerBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFB6B8BA" Offset="0" />
        <GradientStop Color="#FFDEDFE0" Offset="1" />
        <GradientStop Color="#FFB6B8BA" Offset="0.502" />
        <GradientStop Color="#FFBEC0C2" Offset="0.518" />
    </LinearGradientBrush>
    <GradientStopCollection x:Key="CheckBoxInnerBorderHoverBrush_GradientStops">
        <GradientStop Color="#FFFEDEBE" Offset="0" />
        <GradientStop Color="#FFFCAD5D" Offset="1" />
        <GradientStop Color="#FFFCB771" Offset="0.502" />
        <GradientStop Color="#FFFCAD5D" Offset="0.518" />
    </GradientStopCollection>
    <LinearGradientBrush x:Key="CheckBoxInnerBorderHoverBrush" EndPoint="0.5,1" StartPoint="0.5,0" GradientStops="{DynamicResource CheckBoxInnerBorderHoverBrush_GradientStops}">
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckBoxInnerBorderHoverBrush_Inverted" EndPoint="0.5,1" StartPoint="0.5,0" GradientStops="{DynamicResource CheckBoxInnerBorderHoverBrush_GradientStops}">
        <LinearGradientBrush.RelativeTransform>
            <RotateTransform CenterX="0.5" CenterY="0.5" Angle="180"/>
        </LinearGradientBrush.RelativeTransform>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CheckBoxHoverBorderBrush" Color="#FFD6A259" />
    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Control.Background" Value="{DynamicResource CheckBoxBg}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Control.Template" Value="{DynamicResource NuclearCheckBox}" />
    </Style>
    <ControlTemplate x:Key="NuclearCheckBox" TargetType="{x:Type CheckBox}">
        <BulletDecorator Background="#00FFFFFF">
            <BulletDecorator.Bullet>
                <Grid Width="13" Height="13">
                    <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <Border Name="border" BorderThickness="1" Margin="1" BorderBrush="{DynamicResource CheckBoxInnerBorderBrush}" />
                    </Border>
                    <Path Name="CheckMark" Stretch="Fill" Stroke="{StaticResource GlyphBrush}" StrokeThickness="2" Width="Auto" Data="M-0.32455936,5.7168726L3.1785986,10.519821 10.465148,2.9112485" Margin="1.639,2.318,2.043,2.5" />
                    <Rectangle Name="ThreeState" Visibility="Hidden" Fill="{DynamicResource CheckBoxInnerBorderHoverBrush}" Stroke="#FFB36414" Margin="2,2,2,2" RadiusX="1" RadiusY="1" />
                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
        </BulletDecorator>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ToggleButton.IsChecked" Value="True" />
                    <Condition Property="ToggleButton.IsThreeState" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ThreeState" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Hidden" />
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="false">
                <Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Value="{DynamicResource MouseOverBrush}" TargetName="Border" Property="Border.Background" />
                <Setter TargetName="border" Value="{DynamicResource CheckBoxInnerBorderHoverBrush}" Property="Border.BorderBrush" />
                <Setter TargetName="Border" Value="{DynamicResource CheckBoxHoverBorderBrush}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter Value="{DynamicResource PressedBrush}" TargetName="Border" Property="Border.Background" />
                <Setter TargetName="Border" Value="{DynamicResource GlyphBrush}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" Property="Border.Background" />
                <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
                <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" Property="Border.BorderBrush" />
                <Setter TargetName="border" Value="{DynamicResource DisabledBorderBrush}" Property="Border.BorderBrush" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
        <Setter Property="Control.Background" Value="{DynamicResource CheckBoxBg}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Control.Template" Value="{DynamicResource NuclearRadioButton}" />
    </Style>
    <ControlTemplate x:Key="NuclearRadioButton" TargetType="{x:Type RadioButton}">
        <BulletDecorator Background="#00FFFFFF">
            <BulletDecorator.Bullet>
                <Grid Width="13" Height="13">
                    <Ellipse Name="Ellipse_Border" Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" />
                    <Ellipse Name="InnerBorder" StrokeThickness="1" Stroke="{DynamicResource CheckBoxInnerBorderBrush}" Margin="2" />
                    <Ellipse Name="CheckMark" Margin="3" Stroke="#FFAA5B0B">
                        <Ellipse.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFFFFAF" Offset="0" />
                                <GradientStop Color="#FFFE9E45" Offset="1" />
                                <GradientStop Color="#FFFFE38A" Offset="0.325" />
                                <GradientStop Color="#FFFFBA61" Offset="0.663" />
                            </LinearGradientBrush>
                        </Ellipse.Fill>
                    </Ellipse>
                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />
        </BulletDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="false">
                <Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Value="{DynamicResource MouseOverBrush}" TargetName="Ellipse_Border" Property="Shape.Fill" />
                <Setter TargetName="InnerBorder" Value="{DynamicResource CheckBoxInnerBorderHoverBrush}" Property="Shape.Stroke" />
                <Setter TargetName="Ellipse_Border" Value="{DynamicResource CheckBoxHoverBorderBrush}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
                <Setter Value="{DynamicResource PressedBrush}" TargetName="Ellipse_Border" Property="Shape.Fill" />
                <Setter Value="{DynamicResource GlyphBrush}" TargetName="Ellipse_Border" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Ellipse_Border" Property="Shape.Fill" />
                <Setter TargetName="Ellipse_Border" Property="Shape.Stroke" Value="#40000000" />
                <Setter Property="Control.Foreground" Value="#80000000" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <DropShadowBitmapEffect x:Key="PopupDropShadow" ShadowDepth="1.5" Softness="1" Opacity="0.2" />
    <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <Border Name="Border" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1" CornerRadius="1">
                            <ScrollViewer Focusable="False" Background="{TemplateBinding Control.Background}" Padding="4" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="False">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NuclearTreeViewItemToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Width="15" Height="13" Background="#00FFFFFF">
                        <Path Name="IsExpandedPath" Visibility="Collapsed" HorizontalAlignment="Left" Margin="2.5,3.75,0,1.25" VerticalAlignment="Stretch" Fill="{DynamicResource GlyphBrush}" Data="M0,4L8,4 4,8z" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-46.576" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path Name="IsExpandedPathHover" HorizontalAlignment="Left" Margin="2.5,3.75,0,1.25" VerticalAlignment="Stretch" Data="M0,4L8,4 4,8z" RenderTransformOrigin="0.5,0.5" Stroke="#FF27C7F7" Opacity="0" Fill="{x:Null}">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-46.576" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path Name="ExpandPath" HorizontalAlignment="Left" Margin="1,1,1,1" VerticalAlignment="Center" Data="M4,0L8,4 4,8z" Stroke="#FFA5A5A5" Fill="{x:Null}" />
                        <Path Name="ExpandPathHover" HorizontalAlignment="Left" Margin="1,1,0,1" VerticalAlignment="Center" Data="M4,0L8,4 4,8z" Stroke="#FF27C7F7" Opacity="0" Fill="{x:Null}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="True" />
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="IsExpandedPathHover" Property="UIElement.Opacity" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="ToggleButton.IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandPathHover" Property="UIElement.Opacity" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="IsExpandedPath" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="ExpandPath" Property="UIElement.Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Padding" Value="1,0,0,0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton Name="Expander" Style="{DynamicResource NuclearTreeViewItemToggleButton}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border Name="Selection_Border" Grid.Column="1" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
                            <Grid>
                                <Border Name="border" BorderBrush="{DynamicResource SelectedListItemBorderBrush}" BorderThickness="1" CornerRadius="2" Opacity="0">
                                    <Border BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" BorderThickness="1" Background="{DynamicResource ListItemSelectedBackgroundBrush}" CornerRadius="1" />
                                </Border>
                                <Border Name="border1" BorderBrush="{DynamicResource MouseOverBorderBrush}" BorderThickness="1" CornerRadius="2" Opacity="0">
                                    <Border BorderThickness="1" Background="{DynamicResource ListItemHoverBrush}" CornerRadius="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                        </Border.BorderBrush>
                                    </Border>
                                </Border>
                                <ContentPresenter Name="PART_Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" ContentSource="Header" Margin="2" />
                            </Grid>
                        </Border>
                        <ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Selection_Border" Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="border1" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="TreeViewItem.IsSelected" Value="True">
                            <Setter TargetName="border" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                <Condition Property="TreeViewItem.IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Selection_Border" Property="Border.Background" />
                            <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Control.Foreground" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ListBorder" Color="#828790" />
    <LinearGradientBrush x:Key="NormalBrushExtSimple" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFEDEFF1" Offset="1" />
        <GradientStop Color="#FFFDFDFD" Offset="0.332" />
        <GradientStop Color="#FFFBFBFC" Offset="0.741" />
        <GradientStop Color="#FFF6F7F8" Offset="0.875" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ShineFill" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#CC000000" Offset="0" />
        <GradientStop Color="#CC000000" Offset="1" />
        <GradientStop Color="#33C3C3C3" Offset="0.5" />
        <GradientStop Color="#33C8C8C8" Offset="0.525" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ShineOpacity" EndPoint="1.012,0.887" StartPoint="0.012,0.887">
        <GradientStop Color="#E5000000" Offset="0" />
        <GradientStop Color="#E5FFFFFF" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ShineBrush" EndPoint="0.465,0.869" StartPoint="0.465,0.143">
        <GradientStop Color="#CCFFFFFF" Offset="0" />
        <GradientStop Color="#00FFFFFF" Offset="1" />
        <GradientStop Color="#4CFFFFFF" Offset="0.56" />
        <GradientStop Color="#99FFFFFF" Offset="0.555" />
    </LinearGradientBrush>
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="True" Margin="2" Stroke="#FF000000" StrokeDashArray="1 2" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0" />
        <GradientStop Color="#EBEBEB" Offset="0.5" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#CDCDCD" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />
    <Color x:Key="WhiteSpreadColor">#FFFFFFFF</Color>
    <SolidColorBrush x:Key="WhiteSpreadBrush" Color="{StaticResource WhiteSpreadColor}" />
    <SolidColorBrush x:Key="WhiteBorderBrush" Color="{StaticResource WhiteSpreadColor}" />
    <LinearGradientBrush x:Key="BlueGlassBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF2E6CC0" Offset="0" />
        <GradientStop Color="{StaticResource BlueSpreadColor}" Offset="1" />
        <GradientStop Color="#FF2962B5" Offset="0.043" />
        <GradientStop Color="#FF245DAF" Offset="0.091" />
        <GradientStop Color="#FF265DB1" Offset="0.211" />
        <GradientStop Color="#FF225CAF" Offset="0.341" />
        <GradientStop Color="#FF225BB1" Offset="0.414" />
        <GradientStop Color="#FF255DBB" Offset="0.573" />
        <GradientStop Color="#FF2A61C5" Offset="0.638" />
        <GradientStop Color="#FF2F66CB" Offset="0.685" />
        <GradientStop Color="#FF2F6BD0" Offset="0.75" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BlueUpperGlowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF4683E3" Offset="0" />
        <GradientStop Color="#003167C1" Offset="0.543" />
        <GradientStop Color="#FF407BDA" Offset="0.056" />
        <GradientStop Color="#FF3D76D4" Offset="0.112" />
        <GradientStop Color="#FF3971CD" Offset="0.168" />
        <GradientStop Color="#FF356CC7" Offset="0.228" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BlueInnerWhiteBrush" Color="#FF549FF1" />
    <RadialGradientBrush x:Key="BlueBottomGlowBrush" Center="0.501,0.99" GradientOrigin="0.501,0.99">
        <GradientStop Color="#FF68AAEF" Offset="0" />
        <GradientStop Color="#004684D4" Offset="0.974" />
        <GradientStop Color="#FF61A1EB" Offset="0.073" />
        <GradientStop Color="#FF5797E2" Offset="0.151" />
        <GradientStop Color="#FF4E8CDC" Offset="0.237" />
    </RadialGradientBrush>
    <Style x:Key="NuclearBlueButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Control.Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.6" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Name="Grid">
                        <Border Name="BaseBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource BlueBorderBrush}" Background="{x:Null}" />
                        <Border Name="GlassBorder" Margin="1" CornerRadius="2" Background="{DynamicResource BlueGlassBrush}" BorderBrush="{x:Null}" />
                        <Border Name="UpperGlowBorder" BorderThickness="1" CornerRadius="2" Visibility="Visible" Opacity="0.6" Background="{DynamicResource BlueUpperGlowBrush}" BorderBrush="{x:Null}" />
                        <Border Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource BlueInnerWhiteBrush}" Margin="1" Opacity="0.5" />
                        <Border Name="BottomGlowBorder" Margin="1" Opacity="0" CornerRadius="2" Background="{DynamicResource BlueBottomGlowBrush}" BorderBrush="{x:Null}" />
                        <Border Name="PressedGlassBorder" Margin="1" CornerRadius="2" Opacity="0" BorderBrush="{x:Null}">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2E6CC0" Offset="0" />
                                    <GradientStop Color="#FF388BE4" Offset="1" />
                                    <GradientStop Color="#FF2962B5" Offset="0.043" />
                                    <GradientStop Color="#FF245DAF" Offset="0.091" />
                                    <GradientStop Color="#FF265DB1" Offset="0.211" />
                                    <GradientStop Color="#FF225CAF" Offset="0.341" />
                                    <GradientStop Color="#FF225BB1" Offset="0.414" />
                                    <GradientStop Color="#FF255DBB" Offset="0.573" />
                                    <GradientStop Color="#FF2A61C5" Offset="0.638" />
                                    <GradientStop Color="#FF2F66CB" Offset="0.685" />
                                    <GradientStop Color="{StaticResource BlueSpreadColor}" Offset="0.737" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border Name="DisabledBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource DisabledBorderBrush}" Background="#E5EEEEEE" Opacity="0" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefault" Value="True" />
                        <Trigger Property="UIElement.IsKeyboardFocused" Value="True" />
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="True" />
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource DisabledBackgroundBrush}" TargetName="BaseBorder" Property="Border.Background" />
                            <Setter Value="{DynamicResource DisabledBorderBrush}" TargetName="BaseBorder" Property="Border.BorderBrush" />
                            <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
                            <Setter TargetName="DisabledBorder" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Color x:Key="GreenSpreadColor">#FF58BC27</Color>
    <SolidColorBrush x:Key="GreenSpreadBrush" Color="{StaticResource GreenSpreadColor}" />
    <GradientStopCollection x:Key="GreenGlassBrush_GradientStops">
        <GradientStop Color="#FF378E29" Offset="0" />
        <GradientStop Color="{StaticResource GreenSpreadColor}" Offset="1" />
        <GradientStop Color="#FF2E822A" Offset="0.043" />
        <GradientStop Color="#FF307E27" Offset="0.091" />
        <GradientStop Color="#FF327E24" Offset="0.211" />
        <GradientStop Color="#FF367F21" Offset="0.341" />
        <GradientStop Color="#FF307E26" Offset="0.414" />
        <GradientStop Color="#FF368429" Offset="0.573" />
        <GradientStop Color="#FF37882C" Offset="0.638" />
        <GradientStop Color="#FF3D9030" Offset="0.685" />
        <GradientStop Color="#FF3E9531" Offset="0.737" />
    </GradientStopCollection>
    <LinearGradientBrush x:Key="GreenGlassBrush" EndPoint="0.5,1" StartPoint="0.5,0" GradientStops="{DynamicResource GreenGlassBrush_GradientStops}">
        <!--<GradientStop Color="#FFFFFFFF" Offset="0" />
        <GradientStop Color="#FF3E9531" Offset="1" />
        <GradientStop Color="#FFFFFFFF" Offset="0.043" />
        <GradientStop Color="#FFFFFFFF" Offset="0.091" />
        <GradientStop Color="#FFFFFFFF" Offset="0.211" />
        <GradientStop Color="#FF307E26" Offset="0.341" />
        <GradientStop Color="#FF367F21" Offset="0.414" />
        <GradientStop Color="#FF327E24" Offset="0.573" />
        <GradientStop Color="#FF307E27" Offset="0.638" />
        <GradientStop Color="#FF2E822A" Offset="0.685" />
        <GradientStop Color="#FF378E29" Offset="0.737" />-->
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GreenGlassBrush_Inverted" EndPoint="0.5,1" StartPoint="0.5,0" GradientStops="{DynamicResource GreenGlassBrush_GradientStops}">
        <LinearGradientBrush.RelativeTransform>
            <RotateTransform CenterX="0.5" CenterY="0.5" Angle="180"/>
        </LinearGradientBrush.RelativeTransform>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GreenUpperGlowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF479733" Offset="0" />
        <GradientStop Color="#0035812D" Offset="0.543" />
        <GradientStop Color="#FF419031" Offset="0.052" />
        <GradientStop Color="#FF3E8D2F" Offset="0.112" />
        <GradientStop Color="#FF34862D" Offset="0.168" />
        <GradientStop Color="#FF2F822B" Offset="0.228" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GreenInnerWhiteBrush" Color="#FF67BC47" />
    <RadialGradientBrush x:Key="GreenBottomGlowBrush" Center="0.501,0.99" GradientOrigin="0.501,0.99">
        <GradientStop Color="#FF89D667" Offset="0" />
        <GradientStop Color="#00499940" Offset="0.974" />
        <GradientStop Color="#FF7FCB62" Offset="0.073" />
        <GradientStop Color="#FF73BF5A" Offset="0.151" />
        <GradientStop Color="#FF69B553" Offset="0.233" />
    </RadialGradientBrush>
    <Style x:Key="NuclearGreenButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Control.Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.6" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Name="Grid">
                        <Border Name="BaseBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource GreenBorderBrush}" Background="{x:Null}" />
                        <Border Name="GlassBorder" Margin="1" CornerRadius="2" Background="{DynamicResource GreenGlassBrush}" BorderBrush="{x:Null}" />
                        <Border Name="UpperGlowBorder" Margin="1" Opacity="0.6" Visibility="Visible" CornerRadius="2" Background="{DynamicResource GreenUpperGlowBrush}" BorderBrush="{x:Null}" />
                        <Border Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0" BorderBrush="{DynamicResource GreenInnerWhiteBrush}" Margin="1" Opacity="0.5" />
                        <Border Name="BottomGlowBorder" Margin="1" Opacity="0" CornerRadius="2" Background="{DynamicResource GreenBottomGlowBrush}" BorderBrush="{x:Null}" />
                        <Border Name="PressedGlassBorder" Margin="1" CornerRadius="2" Opacity="0" BorderBrush="{x:Null}">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF378E29" Offset="0" />
                                    <GradientStop Color="#FF58BC27" Offset="1" />
                                    <GradientStop Color="#FF2E822A" Offset="0.043" />
                                    <GradientStop Color="#FF307E27" Offset="0.091" />
                                    <GradientStop Color="#FF327E24" Offset="0.211" />
                                    <GradientStop Color="#FF367F21" Offset="0.341" />
                                    <GradientStop Color="#FF307E26" Offset="0.414" />
                                    <GradientStop Color="#FF368429" Offset="0.573" />
                                    <GradientStop Color="#FF37882C" Offset="0.638" />
                                    <GradientStop Color="#FF3D9030" Offset="0.685" />
                                    <GradientStop Color="#FF3E9531" Offset="0.737" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border Name="DisabledBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource DisabledBorderBrush}" Background="#E5EEEEEE" Opacity="0" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefault" Value="True">
                            <Setter TargetName="BaseBorder" Value="{DynamicResource FocusedBrush}" Property="Border.Background" />
                        </Trigger>
                        <Trigger Property="UIElement.IsKeyboardFocused" Value="True" />
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="True" />
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
                            <Setter TargetName="DisabledBorder" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BlueTabItem" TargetType="{x:Type TabItem}">
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0" Y="0" />
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border Name="BaseBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource BlueBorderBrush}" Opacity="0" Background="{x:Null}" />
                            <Border Name="GlassBorder" Margin="1,1,1,0" CornerRadius="2,2,0,0" Background="{DynamicResource BlueGlassBrush}" Opacity="0" BorderBrush="{x:Null}" />
                            <Border Name="UpperGlowBorder" BorderThickness="1,1,1,0" CornerRadius="2" Visibility="Visible" Opacity="0" Background="{DynamicResource BlueUpperGlowBrush}" BorderBrush="{x:Null}" />
                            <Border Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource BlueInnerWhiteBrush}" Margin="1,1,1,0" Opacity="0" />
                            <Border Name="BottomGlowBorder" Margin="1,1,1,0" Opacity="0" CornerRadius="2" Background="{DynamicResource BlueBottomGlowBrush}" BorderBrush="{x:Null}" />
                            <Border Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Margin="0,0,0,1">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Grid Name="LeftOrientation" Margin="0,0,-1,0" />
                            <Grid Name="RightOrientation" Margin="0,0,-1,0" />
                            <ContentPresenter Name="ContentSite" HorizontalAlignment="Center" Margin="12,4" VerticalAlignment="Center" Content="{TemplateBinding HeaderedContentControl.Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" RecognizesAccessKey="True" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="TabItem.TabStripPlacement" Value="Left" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="TabItem.TabStripPlacement" Value="Right" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="TabItem.TabStripPlacement" Value="Left">
                            <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabItem.TabStripPlacement" Value="Right" />
                        <Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
                            <Setter TargetName="ContentSite" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="TabItem.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HoverBorder" Property="UIElement.Opacity" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="TabItem.TabStripPlacement" Value="Left" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="TabItem.TabStripPlacement" Value="Right" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="TabItem.IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="BaseBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="GlassBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="InnerWhiteBorder" Property="UIElement.Opacity" Value="0.3" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="grid" Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="TabItem.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BottomGlowBorder" Property="UIElement.Opacity" Value="0.8" />
                            <Setter TargetName="InnerWhiteBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="UpperGlowBorder" Property="UIElement.Opacity" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    </Style>
    <Style x:Key="GreenTabItem" TargetType="{x:Type TabItem}">
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0" Y="0" />
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border Name="BaseBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource GreenBorderBrush}" Opacity="0" Background="{x:Null}" />
                            <Border Name="GlassBorder" Margin="1,1,1,0" CornerRadius="2,2,0,0" Background="{DynamicResource GreenGlassBrush}" Opacity="0" BorderBrush="{x:Null}" />
                            <Border Name="UpperGlowBorder" BorderThickness="1,1,1,0" CornerRadius="2" Visibility="Visible" Opacity="0" Background="{DynamicResource GreenUpperGlowBrush}" BorderBrush="{x:Null}" />
                            <Border Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource GreenInnerWhiteBrush}" Margin="1,1,1,0" Opacity="0" />
                            <Border Name="BottomGlowBorder" Margin="1,1,1,0" Opacity="0" CornerRadius="2" Background="{DynamicResource GreenBottomGlowBrush}" BorderBrush="{x:Null}" />
                            <Border Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Margin="0,0,0,1">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Grid Name="LeftOrientation" Margin="0,0,-1,0" />
                            <Grid Name="RightOrientation" Margin="0,0,-1,0" />
                            <ContentPresenter Name="ContentSite" HorizontalAlignment="Center" Margin="12,4" VerticalAlignment="Center" Content="{TemplateBinding HeaderedContentControl.Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" RecognizesAccessKey="True" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="TabItem.TabStripPlacement" Value="Left" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="TabItem.TabStripPlacement" Value="Right" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="TabItem.TabStripPlacement" Value="Left">
                            <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabItem.TabStripPlacement" Value="Right">
                            <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
                            <Setter TargetName="ContentSite" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="grid" Property="FrameworkElement.LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="TabItem.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HoverBorder" Property="UIElement.Opacity" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="TabItem.TabStripPlacement" Value="Left" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="TabItem.TabStripPlacement" Value="Right" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="TabItem.IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="BaseBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="GlassBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="InnerWhiteBorder" Property="UIElement.Opacity" Value="0.3" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="grid" Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="TabItem.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BottomGlowBorder" Property="UIElement.Opacity" Value="0.8" />
                            <Setter TargetName="InnerWhiteBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="UpperGlowBorder" Property="UIElement.Opacity" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource DisabledForegroundBrush}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    </Style>
    <Style x:Key="BlueTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource BlueTabItem}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Name="RowDefinition0" Height="Auto" />
                            <RowDefinition Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <Border Name="border" CornerRadius="2,2,0,0" Margin="2,0,0,-4" Panel.ZIndex="100" Background="{x:Null}">
                            <Grid>
                                <Border Name="LeftOrientationBackground" Background="{DynamicResource SmartListBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource SmartListBorderBrush}" BorderThickness="1,1,0,1" />
                                <TabPanel Name="HeaderPanel" IsItemsHost="True" ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                    <TabPanel.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.LayoutTransform>
                                    <TabPanel.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.RenderTransform>
                                </TabPanel>
                            </Grid>
                        </Border>
                        <Border Name="ContentPanel" Grid.Row="1" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
                            <Grid>
                                <Border Name="border1" Height="2" VerticalAlignment="Top" CornerRadius="1,1,0,0" Background="{TemplateBinding Control.Background}" />
                                <ContentPresenter Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
                            <Setter TargetName="border" Property="Grid.Row" Value="1" />
                            <Setter TargetName="border" Property="Border.CornerRadius" Value="0,0,2,2" />
                            <Setter TargetName="border" Property="FrameworkElement.Margin" Value="2,-1,0,0" />
                            <Setter TargetName="border1" Property="FrameworkElement.VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="border1" Property="Border.CornerRadius" Value="0,0,1,1" />
                            <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}" Property="Border.Background" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                            <Setter TargetName="border" Property="Grid.Column" Value="0" />
                            <Setter TargetName="border" Property="FrameworkElement.Margin" Value="0,0,0,0" />
                            <Setter TargetName="ContentPanel" Property="FrameworkElement.Margin" Value="0,0,0,0" />
                            <Setter TargetName="border" Property="Border.CornerRadius" Value="0,2,2,0" />
                            <Setter TargetName="LeftOrientationBackground" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}" Property="Border.Background" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                            <Setter TargetName="border" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Border.CornerRadius" Value="2,0,0,2" />
                            <Setter TargetName="border" Property="Border.CornerRadius" Value="0,2,2,0" />
                            <Setter TargetName="border" Property="FrameworkElement.Margin" Value="0" />
                            <Setter TargetName="LeftOrientationBackground" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}" Property="Border.Background" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="UIElement.Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.2" Color="Black" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource BlueSpreadColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource BlueBorderBrush}" />
    </Style>
    <Style x:Key="GreenTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource GreenTabItem}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Name="RowDefinition0" Height="Auto" />
                            <RowDefinition Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <Border Name="border" CornerRadius="2,2,0,0" Margin="2,0,0,-4" Panel.ZIndex="100" Background="{x:Null}">
                            <Grid>
                                <Border Name="LeftOrientationBackground" Background="{DynamicResource SmartListBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource SmartListBorderBrush}" BorderThickness="1,1,0,1" />
                                <TabPanel Name="HeaderPanel" IsItemsHost="True" ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                    <TabPanel.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.LayoutTransform>
                                    <TabPanel.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.RenderTransform>
                                </TabPanel>
                            </Grid>
                        </Border>
                        <Border Name="ContentPanel" Grid.Row="1" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
                            <Grid>
                                <Border Name="border1" Height="2" VerticalAlignment="Top" CornerRadius="1,1,0,0" Background="{TemplateBinding Control.Background}" />
                                <ContentPresenter Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
                            <Setter TargetName="border" Property="Grid.Row" Value="1" />
                            <Setter TargetName="border" Property="Border.CornerRadius" Value="0,0,2,2" />
                            <Setter TargetName="border" Property="FrameworkElement.Margin" Value="2,-1,0,0" />
                            <Setter TargetName="border1" Property="FrameworkElement.VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="border1" Property="Border.CornerRadius" Value="0,0,1,1" />
                            <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}" Property="Border.Background" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                            <Setter TargetName="border" Property="Grid.Column" Value="0" />
                            <Setter TargetName="border" Property="FrameworkElement.Margin" Value="0,0,0,0" />
                            <Setter TargetName="ContentPanel" Property="FrameworkElement.Margin" Value="0,0,0,0" />
                            <Setter TargetName="border" Property="Border.CornerRadius" Value="0,2,2,0" />
                            <Setter TargetName="LeftOrientationBackground" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}" Property="Border.Background" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                            <Setter TargetName="border" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Border.CornerRadius" Value="2,0,0,2" />
                            <Setter TargetName="border" Property="Border.CornerRadius" Value="0,2,2,0" />
                            <Setter TargetName="border" Property="FrameworkElement.Margin" Value="0" />
                            <Setter TargetName="LeftOrientationBackground" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}" Property="Border.Background" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="UIElement.Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.2" Color="Black" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource GreenSpreadColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource GreenBorderBrush}" />
    </Style>
</ResourceDictionary>