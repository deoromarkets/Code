//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace deORO.ePortConnect {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:ec.usatech.com", ConfigurationName="ePortConnect.ecPortType")]
    public interface ecPortType {
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://ec.usatech.com) of message chargeV3_1Request does not match the default value (urn:ec.usatech.com)
        [System.ServiceModel.OperationContractAttribute(Action="urn:chargeV3_1", ReplyAction="urn:chargeV3_1Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        deORO.ePortConnect.chargeV3_1Response chargeV3_1(deORO.ePortConnect.chargeV3_1Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:chargeV3_1", ReplyAction="urn:chargeV3_1Response")]
        System.Threading.Tasks.Task<deORO.ePortConnect.chargeV3_1Response> chargeV3_1Async(deORO.ePortConnect.chargeV3_1Request request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://ec.usatech.com) of message authV3_1Request does not match the default value (urn:ec.usatech.com)
        [System.ServiceModel.OperationContractAttribute(Action="urn:authV3_1", ReplyAction="urn:authV3_1Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        deORO.ePortConnect.authV3_1Response authV3_1(deORO.ePortConnect.authV3_1Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:authV3_1", ReplyAction="urn:authV3_1Response")]
        System.Threading.Tasks.Task<deORO.ePortConnect.authV3_1Response> authV3_1Async(deORO.ePortConnect.authV3_1Request request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://ec.usatech.com) of message chargeV3Request does not match the default value (urn:ec.usatech.com)
        [System.ServiceModel.OperationContractAttribute(Action="urn:chargeV3", ReplyAction="urn:chargeV3Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        deORO.ePortConnect.chargeV3Response chargeV3(deORO.ePortConnect.chargeV3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:chargeV3", ReplyAction="urn:chargeV3Response")]
        System.Threading.Tasks.Task<deORO.ePortConnect.chargeV3Response> chargeV3Async(deORO.ePortConnect.chargeV3Request request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://ec.usatech.com) of message processUpdatesRequest does not match the default value (urn:ec.usatech.com)
        [System.ServiceModel.OperationContractAttribute(Action="urn:processUpdates", ReplyAction="urn:processUpdatesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        deORO.ePortConnect.processUpdatesResponse processUpdates(deORO.ePortConnect.processUpdatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:processUpdates", ReplyAction="urn:processUpdatesResponse")]
        System.Threading.Tasks.Task<deORO.ePortConnect.processUpdatesResponse> processUpdatesAsync(deORO.ePortConnect.processUpdatesRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://ec.usatech.com) of message cashV3Request does not match the default value (urn:ec.usatech.com)
        [System.ServiceModel.OperationContractAttribute(Action="urn:cashV3", ReplyAction="urn:cashV3Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        deORO.ePortConnect.cashV3Response cashV3(deORO.ePortConnect.cashV3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:cashV3", ReplyAction="urn:cashV3Response")]
        System.Threading.Tasks.Task<deORO.ePortConnect.cashV3Response> cashV3Async(deORO.ePortConnect.cashV3Request request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://ec.usatech.com) of message batchV3Request does not match the default value (urn:ec.usatech.com)
        [System.ServiceModel.OperationContractAttribute(Action="urn:batchV3", ReplyAction="urn:batchV3Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        deORO.ePortConnect.batchV3Response batchV3(deORO.ePortConnect.batchV3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:batchV3", ReplyAction="urn:batchV3Response")]
        System.Threading.Tasks.Task<deORO.ePortConnect.batchV3Response> batchV3Async(deORO.ePortConnect.batchV3Request request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://ec.usatech.com) of message uploadFileRequest does not match the default value (urn:ec.usatech.com)
        [System.ServiceModel.OperationContractAttribute(Action="urn:uploadFile", ReplyAction="urn:uploadFileResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        deORO.ePortConnect.uploadFileResponse uploadFile(deORO.ePortConnect.uploadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:uploadFile", ReplyAction="urn:uploadFileResponse")]
        System.Threading.Tasks.Task<deORO.ePortConnect.uploadFileResponse> uploadFileAsync(deORO.ePortConnect.uploadFileRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://ec.usatech.com) of message authV3Request does not match the default value (urn:ec.usatech.com)
        [System.ServiceModel.OperationContractAttribute(Action="urn:authV3", ReplyAction="urn:authV3Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        deORO.ePortConnect.authV3Response authV3(deORO.ePortConnect.authV3Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:authV3", ReplyAction="urn:authV3Response")]
        System.Threading.Tasks.Task<deORO.ePortConnect.authV3Response> authV3Async(deORO.ePortConnect.authV3Request request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ec.usatech.com/xsd")]
    public partial class ECAuthResponse : ECResponse {
        
        private long approvedAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long approvedAmount {
            get {
                return this.approvedAmountField;
            }
            set {
                this.approvedAmountField = value;
                this.RaisePropertyChanged("approvedAmount");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ECAuthResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ECProcessUpdatesResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ec.usatech.com/xsd")]
    public partial class ECResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string newPasswordField;
        
        private string newUsernameField;
        
        private int returnCodeField;
        
        private string returnMessageField;
        
        private string serialNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string newPassword {
            get {
                return this.newPasswordField;
            }
            set {
                this.newPasswordField = value;
                this.RaisePropertyChanged("newPassword");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string newUsername {
            get {
                return this.newUsernameField;
            }
            set {
                this.newUsernameField = value;
                this.RaisePropertyChanged("newUsername");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int returnCode {
            get {
                return this.returnCodeField;
            }
            set {
                this.returnCodeField = value;
                this.RaisePropertyChanged("returnCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string returnMessage {
            get {
                return this.returnMessageField;
            }
            set {
                this.returnMessageField = value;
                this.RaisePropertyChanged("returnMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
                this.RaisePropertyChanged("serialNumber");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ec.usatech.com/xsd")]
    public partial class ECProcessUpdatesResponse : ECResponse {
        
        private byte[] fileContentField;
        
        private string fileNameField;
        
        private long fileSizeField;
        
        private int fileTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] fileContent {
            get {
                return this.fileContentField;
            }
            set {
                this.fileContentField = value;
                this.RaisePropertyChanged("fileContent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
                this.RaisePropertyChanged("fileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
                this.RaisePropertyChanged("fileSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int fileType {
            get {
                return this.fileTypeField;
            }
            set {
                this.fileTypeField = value;
                this.RaisePropertyChanged("fileType");
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="chargeV3_1", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class chargeV3_1Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=2)]
        public string serialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=3)]
        public long tranId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=4)]
        public long amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=5)]
        public int cardReaderType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=6)]
        public int decryptedCardDataLen;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=7)]
        public string encryptedCardDataHex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=8)]
        public string ksnHex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=9)]
        public string cardType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=10)]
        public string tranResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=11)]
        public string tranDetails;
        
        public chargeV3_1Request() {
        }
        
        public chargeV3_1Request(string username, string password, string serialNumber, long tranId, long amount, int cardReaderType, int decryptedCardDataLen, string encryptedCardDataHex, string ksnHex, string cardType, string tranResult, string tranDetails) {
            this.username = username;
            this.password = password;
            this.serialNumber = serialNumber;
            this.tranId = tranId;
            this.amount = amount;
            this.cardReaderType = cardReaderType;
            this.decryptedCardDataLen = decryptedCardDataLen;
            this.encryptedCardDataHex = encryptedCardDataHex;
            this.ksnHex = ksnHex;
            this.cardType = cardType;
            this.tranResult = tranResult;
            this.tranDetails = tranDetails;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="chargeV3_1Response", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class chargeV3_1Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public deORO.ePortConnect.ECAuthResponse @return;
        
        public chargeV3_1Response() {
        }
        
        public chargeV3_1Response(deORO.ePortConnect.ECAuthResponse @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="authV3_1", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class authV3_1Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=2)]
        public string serialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=3)]
        public long tranId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=4)]
        public long amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=5)]
        public int cardReaderType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=6)]
        public int decryptedCardDataLen;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=7)]
        public string encryptedCardDataHex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=8)]
        public string ksnHex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=9)]
        public string cardType;
        
        public authV3_1Request() {
        }
        
        public authV3_1Request(string username, string password, string serialNumber, long tranId, long amount, int cardReaderType, int decryptedCardDataLen, string encryptedCardDataHex, string ksnHex, string cardType) {
            this.username = username;
            this.password = password;
            this.serialNumber = serialNumber;
            this.tranId = tranId;
            this.amount = amount;
            this.cardReaderType = cardReaderType;
            this.decryptedCardDataLen = decryptedCardDataLen;
            this.encryptedCardDataHex = encryptedCardDataHex;
            this.ksnHex = ksnHex;
            this.cardType = cardType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="authV3_1Response", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class authV3_1Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public deORO.ePortConnect.ECAuthResponse @return;
        
        public authV3_1Response() {
        }
        
        public authV3_1Response(deORO.ePortConnect.ECAuthResponse @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="chargeV3", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class chargeV3Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=2)]
        public string serialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=3)]
        public long tranId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=4)]
        public long amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=5)]
        public string cardData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=6)]
        public string cardType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=7)]
        public string tranResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=8)]
        public string tranDetails;
        
        public chargeV3Request() {
        }
        
        public chargeV3Request(string username, string password, string serialNumber, long tranId, long amount, string cardData, string cardType, string tranResult, string tranDetails) {
            this.username = username;
            this.password = password;
            this.serialNumber = serialNumber;
            this.tranId = tranId;
            this.amount = amount;
            this.cardData = cardData;
            this.cardType = cardType;
            this.tranResult = tranResult;
            this.tranDetails = tranDetails;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="chargeV3Response", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class chargeV3Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public deORO.ePortConnect.ECAuthResponse @return;
        
        public chargeV3Response() {
        }
        
        public chargeV3Response(deORO.ePortConnect.ECAuthResponse @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processUpdates", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class processUpdatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=2)]
        public string serialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=3)]
        public int updateStatus;
        
        public processUpdatesRequest() {
        }
        
        public processUpdatesRequest(string username, string password, string serialNumber, int updateStatus) {
            this.username = username;
            this.password = password;
            this.serialNumber = serialNumber;
            this.updateStatus = updateStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="processUpdatesResponse", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class processUpdatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public deORO.ePortConnect.ECProcessUpdatesResponse @return;
        
        public processUpdatesResponse() {
        }
        
        public processUpdatesResponse(deORO.ePortConnect.ECProcessUpdatesResponse @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="cashV3", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class cashV3Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=2)]
        public string serialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=3)]
        public long tranId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=4)]
        public long amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=5)]
        public long tranUTCTimeMs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=6)]
        public int tranUTCOffsetMs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=7)]
        public string tranResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=8)]
        public string tranDetails;
        
        public cashV3Request() {
        }
        
        public cashV3Request(string username, string password, string serialNumber, long tranId, long amount, long tranUTCTimeMs, int tranUTCOffsetMs, string tranResult, string tranDetails) {
            this.username = username;
            this.password = password;
            this.serialNumber = serialNumber;
            this.tranId = tranId;
            this.amount = amount;
            this.tranUTCTimeMs = tranUTCTimeMs;
            this.tranUTCOffsetMs = tranUTCOffsetMs;
            this.tranResult = tranResult;
            this.tranDetails = tranDetails;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="cashV3Response", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class cashV3Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public deORO.ePortConnect.ECResponse @return;
        
        public cashV3Response() {
        }
        
        public cashV3Response(deORO.ePortConnect.ECResponse @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="batchV3", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class batchV3Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=2)]
        public string serialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=3)]
        public long tranId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=4)]
        public long amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=5)]
        public string tranResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=6)]
        public string tranDetails;
        
        public batchV3Request() {
        }
        
        public batchV3Request(string username, string password, string serialNumber, long tranId, long amount, string tranResult, string tranDetails) {
            this.username = username;
            this.password = password;
            this.serialNumber = serialNumber;
            this.tranId = tranId;
            this.amount = amount;
            this.tranResult = tranResult;
            this.tranDetails = tranDetails;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="batchV3Response", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class batchV3Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public deORO.ePortConnect.ECResponse @return;
        
        public batchV3Response() {
        }
        
        public batchV3Response(deORO.ePortConnect.ECResponse @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadFile", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class uploadFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=2)]
        public string serialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=3)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=4)]
        public int fileType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=5)]
        public long fileSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] fileContent;
        
        public uploadFileRequest() {
        }
        
        public uploadFileRequest(string username, string password, string serialNumber, string fileName, int fileType, long fileSize, byte[] fileContent) {
            this.username = username;
            this.password = password;
            this.serialNumber = serialNumber;
            this.fileName = fileName;
            this.fileType = fileType;
            this.fileSize = fileSize;
            this.fileContent = fileContent;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadFileResponse", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class uploadFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public deORO.ePortConnect.ECResponse @return;
        
        public uploadFileResponse() {
        }
        
        public uploadFileResponse(deORO.ePortConnect.ECResponse @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="authV3", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class authV3Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=2)]
        public string serialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=3)]
        public long tranId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=4)]
        public long amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=5)]
        public string cardData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=6)]
        public string cardType;
        
        public authV3Request() {
        }
        
        public authV3Request(string username, string password, string serialNumber, long tranId, long amount, string cardData, string cardType) {
            this.username = username;
            this.password = password;
            this.serialNumber = serialNumber;
            this.tranId = tranId;
            this.amount = amount;
            this.cardData = cardData;
            this.cardType = cardType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="authV3Response", WrapperNamespace="http://ec.usatech.com", IsWrapped=true)]
    public partial class authV3Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ec.usatech.com", Order=0)]
        public deORO.ePortConnect.ECAuthResponse @return;
        
        public authV3Response() {
        }
        
        public authV3Response(deORO.ePortConnect.ECAuthResponse @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ecPortTypeChannel : deORO.ePortConnect.ecPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ecPortTypeClient : System.ServiceModel.ClientBase<deORO.ePortConnect.ecPortType>, deORO.ePortConnect.ecPortType {
        
        public ecPortTypeClient() {
        }
        
        public ecPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ecPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ecPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ecPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        deORO.ePortConnect.chargeV3_1Response deORO.ePortConnect.ecPortType.chargeV3_1(deORO.ePortConnect.chargeV3_1Request request) {
            return base.Channel.chargeV3_1(request);
        }
        
        public deORO.ePortConnect.ECAuthResponse chargeV3_1(string username, string password, string serialNumber, long tranId, long amount, int cardReaderType, int decryptedCardDataLen, string encryptedCardDataHex, string ksnHex, string cardType, string tranResult, string tranDetails) {
            deORO.ePortConnect.chargeV3_1Request inValue = new deORO.ePortConnect.chargeV3_1Request();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.tranId = tranId;
            inValue.amount = amount;
            inValue.cardReaderType = cardReaderType;
            inValue.decryptedCardDataLen = decryptedCardDataLen;
            inValue.encryptedCardDataHex = encryptedCardDataHex;
            inValue.ksnHex = ksnHex;
            inValue.cardType = cardType;
            inValue.tranResult = tranResult;
            inValue.tranDetails = tranDetails;
            deORO.ePortConnect.chargeV3_1Response retVal = ((deORO.ePortConnect.ecPortType)(this)).chargeV3_1(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<deORO.ePortConnect.chargeV3_1Response> deORO.ePortConnect.ecPortType.chargeV3_1Async(deORO.ePortConnect.chargeV3_1Request request) {
            return base.Channel.chargeV3_1Async(request);
        }
        
        public System.Threading.Tasks.Task<deORO.ePortConnect.chargeV3_1Response> chargeV3_1Async(string username, string password, string serialNumber, long tranId, long amount, int cardReaderType, int decryptedCardDataLen, string encryptedCardDataHex, string ksnHex, string cardType, string tranResult, string tranDetails) {
            deORO.ePortConnect.chargeV3_1Request inValue = new deORO.ePortConnect.chargeV3_1Request();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.tranId = tranId;
            inValue.amount = amount;
            inValue.cardReaderType = cardReaderType;
            inValue.decryptedCardDataLen = decryptedCardDataLen;
            inValue.encryptedCardDataHex = encryptedCardDataHex;
            inValue.ksnHex = ksnHex;
            inValue.cardType = cardType;
            inValue.tranResult = tranResult;
            inValue.tranDetails = tranDetails;
            return ((deORO.ePortConnect.ecPortType)(this)).chargeV3_1Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        deORO.ePortConnect.authV3_1Response deORO.ePortConnect.ecPortType.authV3_1(deORO.ePortConnect.authV3_1Request request) {
            return base.Channel.authV3_1(request);
        }
        
        public deORO.ePortConnect.ECAuthResponse authV3_1(string username, string password, string serialNumber, long tranId, long amount, int cardReaderType, int decryptedCardDataLen, string encryptedCardDataHex, string ksnHex, string cardType) {
            deORO.ePortConnect.authV3_1Request inValue = new deORO.ePortConnect.authV3_1Request();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.tranId = tranId;
            inValue.amount = amount;
            inValue.cardReaderType = cardReaderType;
            inValue.decryptedCardDataLen = decryptedCardDataLen;
            inValue.encryptedCardDataHex = encryptedCardDataHex;
            inValue.ksnHex = ksnHex;
            inValue.cardType = cardType;
            deORO.ePortConnect.authV3_1Response retVal = ((deORO.ePortConnect.ecPortType)(this)).authV3_1(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<deORO.ePortConnect.authV3_1Response> deORO.ePortConnect.ecPortType.authV3_1Async(deORO.ePortConnect.authV3_1Request request) {
            return base.Channel.authV3_1Async(request);
        }
        
        public System.Threading.Tasks.Task<deORO.ePortConnect.authV3_1Response> authV3_1Async(string username, string password, string serialNumber, long tranId, long amount, int cardReaderType, int decryptedCardDataLen, string encryptedCardDataHex, string ksnHex, string cardType) {
            deORO.ePortConnect.authV3_1Request inValue = new deORO.ePortConnect.authV3_1Request();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.tranId = tranId;
            inValue.amount = amount;
            inValue.cardReaderType = cardReaderType;
            inValue.decryptedCardDataLen = decryptedCardDataLen;
            inValue.encryptedCardDataHex = encryptedCardDataHex;
            inValue.ksnHex = ksnHex;
            inValue.cardType = cardType;
            return ((deORO.ePortConnect.ecPortType)(this)).authV3_1Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        deORO.ePortConnect.chargeV3Response deORO.ePortConnect.ecPortType.chargeV3(deORO.ePortConnect.chargeV3Request request) {
            return base.Channel.chargeV3(request);
        }
        
        public deORO.ePortConnect.ECAuthResponse chargeV3(string username, string password, string serialNumber, long tranId, long amount, string cardData, string cardType, string tranResult, string tranDetails) {
            deORO.ePortConnect.chargeV3Request inValue = new deORO.ePortConnect.chargeV3Request();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.tranId = tranId;
            inValue.amount = amount;
            inValue.cardData = cardData;
            inValue.cardType = cardType;
            inValue.tranResult = tranResult;
            inValue.tranDetails = tranDetails;
            deORO.ePortConnect.chargeV3Response retVal = ((deORO.ePortConnect.ecPortType)(this)).chargeV3(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<deORO.ePortConnect.chargeV3Response> deORO.ePortConnect.ecPortType.chargeV3Async(deORO.ePortConnect.chargeV3Request request) {
            return base.Channel.chargeV3Async(request);
        }
        
        public System.Threading.Tasks.Task<deORO.ePortConnect.chargeV3Response> chargeV3Async(string username, string password, string serialNumber, long tranId, long amount, string cardData, string cardType, string tranResult, string tranDetails) {
            deORO.ePortConnect.chargeV3Request inValue = new deORO.ePortConnect.chargeV3Request();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.tranId = tranId;
            inValue.amount = amount;
            inValue.cardData = cardData;
            inValue.cardType = cardType;
            inValue.tranResult = tranResult;
            inValue.tranDetails = tranDetails;
            return ((deORO.ePortConnect.ecPortType)(this)).chargeV3Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        deORO.ePortConnect.processUpdatesResponse deORO.ePortConnect.ecPortType.processUpdates(deORO.ePortConnect.processUpdatesRequest request) {
            return base.Channel.processUpdates(request);
        }
        
        public deORO.ePortConnect.ECProcessUpdatesResponse processUpdates(string username, string password, string serialNumber, int updateStatus) {
            deORO.ePortConnect.processUpdatesRequest inValue = new deORO.ePortConnect.processUpdatesRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.updateStatus = updateStatus;
            deORO.ePortConnect.processUpdatesResponse retVal = ((deORO.ePortConnect.ecPortType)(this)).processUpdates(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<deORO.ePortConnect.processUpdatesResponse> deORO.ePortConnect.ecPortType.processUpdatesAsync(deORO.ePortConnect.processUpdatesRequest request) {
            return base.Channel.processUpdatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<deORO.ePortConnect.processUpdatesResponse> processUpdatesAsync(string username, string password, string serialNumber, int updateStatus) {
            deORO.ePortConnect.processUpdatesRequest inValue = new deORO.ePortConnect.processUpdatesRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.updateStatus = updateStatus;
            return ((deORO.ePortConnect.ecPortType)(this)).processUpdatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        deORO.ePortConnect.cashV3Response deORO.ePortConnect.ecPortType.cashV3(deORO.ePortConnect.cashV3Request request) {
            return base.Channel.cashV3(request);
        }
        
        public deORO.ePortConnect.ECResponse cashV3(string username, string password, string serialNumber, long tranId, long amount, long tranUTCTimeMs, int tranUTCOffsetMs, string tranResult, string tranDetails) {
            deORO.ePortConnect.cashV3Request inValue = new deORO.ePortConnect.cashV3Request();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.tranId = tranId;
            inValue.amount = amount;
            inValue.tranUTCTimeMs = tranUTCTimeMs;
            inValue.tranUTCOffsetMs = tranUTCOffsetMs;
            inValue.tranResult = tranResult;
            inValue.tranDetails = tranDetails;
            deORO.ePortConnect.cashV3Response retVal = ((deORO.ePortConnect.ecPortType)(this)).cashV3(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<deORO.ePortConnect.cashV3Response> deORO.ePortConnect.ecPortType.cashV3Async(deORO.ePortConnect.cashV3Request request) {
            return base.Channel.cashV3Async(request);
        }
        
        public System.Threading.Tasks.Task<deORO.ePortConnect.cashV3Response> cashV3Async(string username, string password, string serialNumber, long tranId, long amount, long tranUTCTimeMs, int tranUTCOffsetMs, string tranResult, string tranDetails) {
            deORO.ePortConnect.cashV3Request inValue = new deORO.ePortConnect.cashV3Request();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.tranId = tranId;
            inValue.amount = amount;
            inValue.tranUTCTimeMs = tranUTCTimeMs;
            inValue.tranUTCOffsetMs = tranUTCOffsetMs;
            inValue.tranResult = tranResult;
            inValue.tranDetails = tranDetails;
            return ((deORO.ePortConnect.ecPortType)(this)).cashV3Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        deORO.ePortConnect.batchV3Response deORO.ePortConnect.ecPortType.batchV3(deORO.ePortConnect.batchV3Request request) {
            return base.Channel.batchV3(request);
        }
        
        public deORO.ePortConnect.ECResponse batchV3(string username, string password, string serialNumber, long tranId, long amount, string tranResult, string tranDetails) {
            deORO.ePortConnect.batchV3Request inValue = new deORO.ePortConnect.batchV3Request();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.tranId = tranId;
            inValue.amount = amount;
            inValue.tranResult = tranResult;
            inValue.tranDetails = tranDetails;
            deORO.ePortConnect.batchV3Response retVal = ((deORO.ePortConnect.ecPortType)(this)).batchV3(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<deORO.ePortConnect.batchV3Response> deORO.ePortConnect.ecPortType.batchV3Async(deORO.ePortConnect.batchV3Request request) {
            return base.Channel.batchV3Async(request);
        }
        
        public System.Threading.Tasks.Task<deORO.ePortConnect.batchV3Response> batchV3Async(string username, string password, string serialNumber, long tranId, long amount, string tranResult, string tranDetails) {
            deORO.ePortConnect.batchV3Request inValue = new deORO.ePortConnect.batchV3Request();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.tranId = tranId;
            inValue.amount = amount;
            inValue.tranResult = tranResult;
            inValue.tranDetails = tranDetails;
            return ((deORO.ePortConnect.ecPortType)(this)).batchV3Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        deORO.ePortConnect.uploadFileResponse deORO.ePortConnect.ecPortType.uploadFile(deORO.ePortConnect.uploadFileRequest request) {
            return base.Channel.uploadFile(request);
        }
        
        public deORO.ePortConnect.ECResponse uploadFile(string username, string password, string serialNumber, string fileName, int fileType, long fileSize, byte[] fileContent) {
            deORO.ePortConnect.uploadFileRequest inValue = new deORO.ePortConnect.uploadFileRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.fileName = fileName;
            inValue.fileType = fileType;
            inValue.fileSize = fileSize;
            inValue.fileContent = fileContent;
            deORO.ePortConnect.uploadFileResponse retVal = ((deORO.ePortConnect.ecPortType)(this)).uploadFile(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<deORO.ePortConnect.uploadFileResponse> deORO.ePortConnect.ecPortType.uploadFileAsync(deORO.ePortConnect.uploadFileRequest request) {
            return base.Channel.uploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<deORO.ePortConnect.uploadFileResponse> uploadFileAsync(string username, string password, string serialNumber, string fileName, int fileType, long fileSize, byte[] fileContent) {
            deORO.ePortConnect.uploadFileRequest inValue = new deORO.ePortConnect.uploadFileRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.fileName = fileName;
            inValue.fileType = fileType;
            inValue.fileSize = fileSize;
            inValue.fileContent = fileContent;
            return ((deORO.ePortConnect.ecPortType)(this)).uploadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        deORO.ePortConnect.authV3Response deORO.ePortConnect.ecPortType.authV3(deORO.ePortConnect.authV3Request request) {
            return base.Channel.authV3(request);
        }
        
        public deORO.ePortConnect.ECAuthResponse authV3(string username, string password, string serialNumber, long tranId, long amount, string cardData, string cardType) {
            deORO.ePortConnect.authV3Request inValue = new deORO.ePortConnect.authV3Request();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.tranId = tranId;
            inValue.amount = amount;
            inValue.cardData = cardData;
            inValue.cardType = cardType;
            deORO.ePortConnect.authV3Response retVal = ((deORO.ePortConnect.ecPortType)(this)).authV3(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<deORO.ePortConnect.authV3Response> deORO.ePortConnect.ecPortType.authV3Async(deORO.ePortConnect.authV3Request request) {
            return base.Channel.authV3Async(request);
        }
        
        public System.Threading.Tasks.Task<deORO.ePortConnect.authV3Response> authV3Async(string username, string password, string serialNumber, long tranId, long amount, string cardData, string cardType) {
            deORO.ePortConnect.authV3Request inValue = new deORO.ePortConnect.authV3Request();
            inValue.username = username;
            inValue.password = password;
            inValue.serialNumber = serialNumber;
            inValue.tranId = tranId;
            inValue.amount = amount;
            inValue.cardData = cardData;
            inValue.cardType = cardType;
            return ((deORO.ePortConnect.ecPortType)(this)).authV3Async(inValue);
        }
    }
}
